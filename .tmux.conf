# set -g default-terminal "screen-256color"
# if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

# fix escape key in Vim:
set-option -s escape-time 0


############################################################
# Fix how SSH pubkey auth happens through tmux:
############################################################

# Remove SSH_AUTH_SOCK to disable tmux automatically resetting the variable
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID \
                           SSH_CONNECTION WINDOWID XAUTHORITY"

# Use a symlink to look up SSH authentication
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock


############################################################
# Mouse:
############################################################

# SecureCRT works well with mouse support but it will cost you select-to-copy:
#set -g mouse on


############################################################
# Adjust key bindings:
############################################################

# keep the directory when spawning a new window
bind c new-window -c "#{pane_current_path}"

# split current window horizontally
bind -r - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind -r | split-window -h -c "#{pane_current_path}"

# reload configuration
bind r \
    source-file ~/.tmux.conf \; \
    display '~/.tmux.conf reloaded'

# I don't know what this is supposed to do:
# maximize current pane
#bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# use Ctrl-Alt-Arrows to resize the current pane:
bind -n M-C-Left resize-pane -L 1
bind -n M-C-Right resize-pane -R 1
bind -n M-C-Up resize-pane -U 1
bind -n M-C-Down resize-pane -D 1

# switch panes using Alt-arrow without prefix
bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D

# switch windows using Shift-Left/Right without prefix:
bind -n S-Right next-window
bind -n S-Left previous-window

############################################################
# Visual tweaks
############################################################

_SEP_L_HARD=
_SEP_R_HARD=
_SEP_L_SOFT=
_SEP_R_SOFT=

_BAR_BASE_C="color040"
_STATUS_RL_BG="color55"
_STATUS_RL_FG="color254,nobold,noitalics,nounderscore"
# Window Status ACTIVE colors:
_STATUS_ACTIVE_BG="color058"
_STATUS_ACTIVE_FG="color020"
# Window Status colors of the non-current window(s) in the status bar:
_STATUS_SECONDARY_BG="color236"
_STATUS_SECONDARY_FG="color254"

set -g pane-border-style
set -g pane-active-border-style
#set -g pane-active-border-style fg=black,bg=$_BAR_BASE_C
set -g pane-border-status top
set -g pane-border-format " #{pane_index} $_SEP_L_SOFT #{pane_current_command} "
set -g window-style 'fg=color248,bg=black'

# Lighten the active window to make it stand out:
set -g window-active-style 'fg=white,bg=colour234'

# set the bottom right of the status line:
set -g status-right "$_SEP_R_HARD#[fg=$_STATUS_RL_FG,bg=$_STATUS_RL_BG] #h #[fg=$_BAR_BASE_C,bg=$_STATUS_RL_BG]$_SEP_R_SOFT#[fg=$_STATUS_RL_FG,bg=$_STATUS_RL_BG] %d %b %R"

# Set the base colors for the bottom status bar:
set -g status-style fg=$_STATUS_RL_BG,bg=$_BAR_BASE_C

# Inactive window format:
set -g window-status-format "#[fg=$_BAR_BASE_C,bg=$_STATUS_SECONDARY_BG]$_SEP_L_HARD#[fg=$_STATUS_SECONDARY_FG,bg=$_STATUS_SECONDARY_BG] #I#F #[fg=$_BAR_BASE_C,bg=$_STATUS_SECONDARY_BG]#[fg=$_STATUS_SECONDARY_FG,bg=$_STATUS_SECONDARY_BG] #W #[fg=$_STATUS_SECONDARY_BG,bg=$_BAR_BASE_C]$_SEP_L_HARD"

# change the color on the status bar of the active window:
set -g window-status-current-format "#[fg=$_BAR_BASE_C,bg=$_STATUS_ACTIVE_BG]$_SEP_L_HARD #[fg=$_STATUS_ACTIVE_FG,bg=$_STATUS_ACTIVE_BG]#I#F #[fg=$_BAR_BASE_C,bg=$_STATUS_ACTIVE_BG]#[fg=$_STATUS_ACTIVE_FG,bg=$_STATUS_ACTIVE_BG] #W #[fg=$_STATUS_ACTIVE_BG,bg=$_BAR_BASE_C]$_SEP_L_HARD"
set -g status-left-length 40
set -g status-left "#[fg=$_STATUS_RL_FG,bg=$_STATUS_RL_BG]#S #[fg=$_STATUS_RL_BG,bg=$_BAR_BASE_C]$_SEP_L_HARD "
